<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="4.63"/>
  <arg name="y_pos" default="1.64"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find cookobot_gazebo)/worlds/restaurant.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find cookobot_gazebo)/robot_description/urdf/turtlebot3_burger_arm.urdf.xacro'" />

  <!-- Load Param files  -->
  <rosparam file="$(find cookobot_gazebo)/robot_description/config/controllers.yaml" command="load" />
  <rosparam file="$(find cookobot_gazebo)/robot_description/config/joint_limits.yaml" command="load" />
  <rosparam file="$(find cookobot_gazebo)/robot_description/config/kinematics.yaml" command="load" />
  <rosparam file="$(find cookobot_gazebo)/robot_description/config/pid_gazebo_ros.yaml" command="load" />


  <!-- Spawn the controller plug-ins-->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
                arm_shoulder_pan_controller
                arm_shoulder_lift_controller
                arm_elbow_flex_controller
                arm_wrist_flex_controller
                gripper_controller
                joint_state_controller"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3 -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
</launch> 
